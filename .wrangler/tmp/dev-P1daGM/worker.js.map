{
  "version": 3,
  "sources": ["../bundle-SvMOMZ/checked-fetch.js", "../../../utils/response.js", "../../../handlers/userHandler.js", "../../../handlers/usersProcessor.js", "../../../utils/calculateTimeDifference.js", "../../../utils/buildGoogleMapsLink.js", "../../../handlers/marcacionesHandler.js", "../../../worker.js", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-SvMOMZ/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-SvMOMZ/middleware-loader.entry.ts"],
  "sourceRoot": "D:\\Proyectos\\ServiRepoApp\\API\\ServiRepoAPI\\.wrangler\\tmp\\dev-P1daGM",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "export function jsonResponse(data, status = 200) {\r\n  return new Response(JSON.stringify(data), {\r\n    status,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n}\r\n", "import { jsonResponse } from '../utils/response.js';\r\n\r\nexport async function handleUser(url) {\r\n  const dni = url.searchParams.get('dni');\r\n\r\n  if (!dni) {\r\n    return jsonResponse({ error: \"Parameter 'dni' is required\" }, 400);\r\n  }\r\n\r\n  const API_URL = `https://cloud01.browix.com/v1/externalpermissions/getUsers/uuid:5632674a4257a67218c812191c3efd81/${dni}/returnOnlyDataPayload:1`;\r\n\r\n  try {\r\n    const res = await fetch(API_URL);\r\n    if (!res.ok) {\r\n      return jsonResponse(\r\n        { error: 'Error fetching user data from external API' },\r\n        500\r\n      );\r\n    }\r\n\r\n    const jsonData = await res.json();\r\n    const records = jsonData?.data?.records || [];\r\n\r\n    if (records.length === 0) {\r\n      return jsonResponse({ error: `No user found with DNI: ${dni}` }, 404);\r\n    }\r\n\r\n    const record = records[0];\r\n    const user = record?.User || {};\r\n    const supervisor = record?.Supervisor || {};\r\n    const customFields = record?.Customfieldvalue || [];\r\n\r\n    const customFieldMap = {};\r\n    customFields.forEach((item) => {\r\n      const label = item?.Customfield?.field_label;\r\n      const value = item?.field_value_alpha;\r\n      if (label) {\r\n        customFieldMap[label] = value;\r\n      }\r\n    });\r\n\r\n    return jsonResponse({\r\n      firstName: user?.name || '',\r\n      lastName: user?.last_name || '',\r\n      identificationNumber: user?.identification_number || '',\r\n      primaryTransport: user?.primary_transport || '',\r\n      alternativeTransport: user?.alternative_transportation || '',\r\n      email: user?.email || '',\r\n      phone: user?.phone || '',\r\n      city: user?.city || '',\r\n      state: user?.state || '',\r\n      role: user?.role || '',\r\n      clientId: user?.client_id || '',\r\n      admissionDate: user?.admission_date || '',\r\n      supervisor: {\r\n        firstName: supervisor?.name || '',\r\n        lastName: supervisor?.last_name || '',\r\n        identificationNumber: supervisor?.identification_number || '',\r\n      },\r\n      customFields: customFieldMap,\r\n    });\r\n  } catch (error) {\r\n    return jsonResponse(\r\n      {\r\n        error: 'Exception occurred while fetching user data',\r\n        details: error.message,\r\n      },\r\n      500\r\n    );\r\n  }\r\n}\r\n", "/**\r\n * Processes the user data to build the list of users to fetch intervals for.\r\n * @param {Object} userData - The main user object (from Browix API).\r\n * @param {boolean} includeSupervised - Whether to include supervised employees.\r\n * @returns {Promise<Array>} - Promise resolving to an array of user objects to process.\r\n */\r\nexport async function processUsers(userData, includeSupervised) {\r\n  const supervisorId = userData?.identification_number;\r\n  const usersList = [];\r\n\r\n  // console.log(`\uD83D\uDD0D [processUsers] Supervisor ID: ${supervisorId}`);\r\n  // console.log(`\uD83D\uDD0D [processUsers] Include supervised: ${includeSupervised}`);\r\n\r\n  // Always include the main user first\r\n  const mainUser = {\r\n    fullName: `${userData?.last_name || 'UnknownLastName'}, ${\r\n      userData?.name || 'UnknownName'\r\n    }`,\r\n    identificationNumber: supervisorId,\r\n    primaryTransport: userData?.primary_transport || 'Unknown',\r\n    secondaryTransport: userData?.alternative_transportation || 'Unknown',\r\n  };\r\n\r\n  // console.log(`\u2705 [processUsers] Added main user: ${mainUser.fullName}`);\r\n  usersList.push(mainUser);\r\n\r\n  if (includeSupervised) {\r\n    const API_SUPERVISED_URL =\r\n      'https://cloud01.browix.com/v1/externalpermissions/getUsers/uuid:5632674a4257a67218c812191c3efd81/limit:200/page:1';\r\n\r\n    // console.log(\r\n    //   `\u27A1\uFE0F [processUsers] Fetching supervised from: ${API_SUPERVISED_URL}`\r\n    // );\r\n\r\n    const resSupervised = await fetch(API_SUPERVISED_URL);\r\n    // console.log(`\uD83D\uDCF6 [processUsers] Response status: ${resSupervised.status}`);\r\n\r\n    if (!resSupervised.ok) {\r\n      // console.warn(\r\n      //   `\u26A0\uFE0F [processUsers] Error fetching supervised employees for supervisor ID ${supervisorId}`\r\n      // );\r\n      return usersList; // Return only the main user if there's an error\r\n    }\r\n\r\n    const dataSupervised = await resSupervised.json();\r\n    const supervisedRecords = dataSupervised?.response?.data?.records || [];\r\n    // console.log(\r\n    //   `\uD83D\uDCCA [processUsers] Supervised records found: ${supervisedRecords.length}`\r\n    // );\r\n\r\n    if (supervisedRecords.length === 0) {\r\n      // console.warn(\r\n      //   `\u26A0\uFE0F [processUsers] No supervised employees found for supervisor ID ${supervisorId}.`\r\n      // );\r\n      return usersList;\r\n    }\r\n\r\n    for (const record of supervisedRecords) {\r\n      const supervisorData = record?.Supervisor || {};\r\n      const supervisorOfRecord = supervisorData?.identification_number;\r\n\r\n      // console.log(\r\n      //   `\uD83D\uDC40 [processUsers] Found supervisor ID in record: ${supervisorOfRecord}`\r\n      // );\r\n\r\n      if (supervisorOfRecord !== supervisorId) {\r\n        // console.log(\r\n        //   `\u23ED\uFE0F [processUsers] Skipped: Supervisor ID does not match (${supervisorOfRecord} !== ${supervisorId})`\r\n        // );\r\n        continue; // Only include employees supervised by this specific supervisor\r\n      }\r\n\r\n      const userInfo = record?.User || {};\r\n      const userItem = {\r\n        fullName: `${userInfo?.last_name || 'UnknownLastName'}, ${\r\n          userInfo?.name || 'UnknownName'\r\n        }`,\r\n        identificationNumber: userInfo?.identification_number || 'UnknownID',\r\n        primaryTransport: userInfo?.primary_transport || 'Unknown',\r\n        secondaryTransport: userInfo?.alternative_transportation || 'Unknown',\r\n      };\r\n\r\n      // console.log(\r\n      //   `\u2705 [processUsers] Added supervised user: ${userItem.fullName}`\r\n      // );\r\n      usersList.push(userItem);\r\n    }\r\n  }\r\n\r\n  // console.log(`\uD83D\uDD1A [processUsers] Total users to process: ${usersList.length}`);\r\n  return usersList;\r\n}\r\n", "/**\r\n * Calculates time difference between two Date objects.\r\n * @param {Date} start - The start time.\r\n * @param {Date} end - The end time.\r\n * @returns {Object} - { decimal, hms }\r\n */\r\nexport function calculateTimeDifference(start, end) {\r\n  const diffMs = end - start;\r\n  const totalSeconds = diffMs / 1000;\r\n  const hours = Math.floor(totalSeconds / 3600);\r\n  const minutes = Math.floor((totalSeconds % 3600) / 60);\r\n  const seconds = Math.floor(totalSeconds % 60);\r\n  const decimal = totalSeconds / 3600;\r\n  const hms = `${hours}:${String(minutes).padStart(2, '0')}:${String(\r\n    seconds\r\n  ).padStart(2, '0')}`;\r\n  return { decimal, hms };\r\n}\r\n", "/**\r\n * Builds a Google Maps link.\r\n * @param {string} lat1\r\n * @param {string} lon1\r\n * @param {string} [lat2]\r\n * @param {string} [lon2]\r\n * @returns {string} - The Google Maps URL.\r\n */\r\nexport function buildGoogleMapsLink(lat1, lon1, lat2 = null, lon2 = null) {\r\n  if (!lat2 || !lon2) {\r\n    return `https://www.google.com/maps?q=${lat1},${lon1}`;\r\n  }\r\n  return `https://www.google.com/maps/dir/${lat1},${lon1}/${lat2},${lon2}`;\r\n}\r\n", "import { jsonResponse } from '../utils/response.js';\r\nimport { processUsers } from './usersProcessor.js';\r\nimport { calculateTimeDifference } from '../utils/calculateTimeDifference.js';\r\nimport { buildGoogleMapsLink } from '../utils/buildGoogleMapsLink.js';\r\n\r\nfunction sleep(ms) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n\r\nexport async function handleMarcaciones(url) {\r\n  const fromDate = url.searchParams.get('fromDate');\r\n  const toDate = url.searchParams.get('toDate');\r\n  const dni = url.searchParams.get('dni');\r\n  const includeSupervised =\r\n    url.searchParams.get('includeSupervised') === 'true';\r\n\r\n  if (!fromDate || !toDate || !dni) {\r\n    return jsonResponse(\r\n      { error: \"Parameters 'fromDate', 'toDate' and 'dni' are required\" },\r\n      400\r\n    );\r\n  }\r\n\r\n  try {\r\n    const userRes = await fetch(\r\n      `https://cloud01.browix.com/v1/externalpermissions/getUsers/uuid:5632674a4257a67218c812191c3efd81/${dni}`\r\n    );\r\n    const userJson = await userRes.json();\r\n    const userData = userJson?.response?.data?.records?.[0]?.User;\r\n    if (!userData) {\r\n      return jsonResponse({ error: 'User not found.' }, 404);\r\n    }\r\n\r\n    // console.log(\r\n    //   '\uD83D\uDED1 [handleMarcaciones] Sleeping 1.5 seconds before fetching supervised users...'\r\n    // );\r\n    await sleep(1500); // 1.5 segundos de espera\r\n\r\n    const usersList = await processUsers(userData, includeSupervised);\r\n    const result = {};\r\n\r\n    for (const user of usersList) {\r\n      await sleep(1000);\r\n\r\n      const apiUrl = `https://cloud01.browix.com/v1/externalpermissions/getIntervalsInDateRange/uuid:5632674a4257a67218c812191c3efd81/${fromDate}/${toDate}/${user.identificationNumber}/returnOnlyDataPayload:1`;\r\n      const intervalsRes = await fetch(apiUrl);\r\n      const intervalsJson = await intervalsRes.json();\r\n      const intervals = intervalsJson?.data || [];\r\n\r\n      const groupedByDate = {};\r\n\r\n      for (const interval of intervals) {\r\n        const intervalData = interval.Interval;\r\n        const branchIn = interval.BranchIn;\r\n\r\n        const datetimeIn = new Date(intervalData.datetime_in);\r\n        const datetimeOut = intervalData.datetime_out\r\n          ? new Date(intervalData.datetime_out)\r\n          : new Date();\r\n        const dateKey = datetimeIn.toISOString().split('T')[0];\r\n\r\n        if (!groupedByDate[dateKey]) {\r\n          groupedByDate[dateKey] = {\r\n            intervals: [],\r\n            routeUrl: '',\r\n            totalGrossHours: '',\r\n            totalNetHours: '',\r\n            totalTransferHours: '',\r\n          };\r\n        }\r\n\r\n        groupedByDate[dateKey].intervals.push({\r\n          datetime_in: intervalData.datetime_in,\r\n          datetime_out: intervalData.datetime_out,\r\n          location: branchIn?.name || 'Unknown',\r\n          latIn: intervalData.lat_in,\r\n          lonIn: intervalData.lon_in,\r\n          latOut: intervalData.lat_out,\r\n          lonOut: intervalData.lon_out,\r\n          // Campos adicionales que rellenamos luego\r\n          mapIn: '',\r\n          mapOut: '',\r\n          from: '',\r\n          transferLabel: '',\r\n          transferTimeHMS: '',\r\n        });\r\n      }\r\n\r\n      // Proceso para cada fecha\r\n      for (const [dateKey, dayData] of Object.entries(groupedByDate)) {\r\n        let totalNetMs = 0;\r\n        let totalTransferMs = 0;\r\n        const routePoints = [];\r\n\r\n        dayData.intervals.forEach((interval, idx) => {\r\n          const start = new Date(interval.datetime_in);\r\n          const end = interval.datetime_out\r\n            ? new Date(interval.datetime_out)\r\n            : new Date();\r\n\r\n          totalNetMs += end - start;\r\n          routePoints.push(`${interval.latIn},${interval.lonIn}`);\r\n\r\n          interval.mapIn = buildGoogleMapsLink(interval.latIn, interval.lonIn);\r\n          interval.mapOut = buildGoogleMapsLink(\r\n            interval.latOut,\r\n            interval.lonOut\r\n          );\r\n\r\n          if (idx === 0) {\r\n            interval.from = 'Start of Day';\r\n            interval.transferLabel = 'Start of Day';\r\n            interval.transferTimeHMS = '00:00:00';\r\n          } else {\r\n            const prev = dayData.intervals[idx - 1];\r\n            const prevEnd = new Date(prev.datetime_out);\r\n            const transfer = calculateTimeDifference(prevEnd, start);\r\n\r\n            interval.from = buildGoogleMapsLink(\r\n              prev.latOut,\r\n              prev.lonOut,\r\n              interval.latIn,\r\n              interval.lonIn\r\n            );\r\n            interval.transferLabel = `${prev.location} --> ${interval.location}`;\r\n            interval.transferTimeHMS = transfer.hms;\r\n            totalTransferMs += start - prevEnd;\r\n          }\r\n        });\r\n\r\n        const firstInterval = dayData.intervals[0];\r\n        const lastInterval = dayData.intervals[dayData.intervals.length - 1];\r\n        const gross = calculateTimeDifference(\r\n          new Date(firstInterval.datetime_in),\r\n          lastInterval.datetime_out\r\n            ? new Date(lastInterval.datetime_out)\r\n            : new Date()\r\n        );\r\n\r\n        // M\u00E9tricas finales del d\u00EDa\r\n        dayData.totalNetHours = new Date(totalNetMs)\r\n          .toISOString()\r\n          .substr(11, 8);\r\n        dayData.totalTransferHours = new Date(totalTransferMs)\r\n          .toISOString()\r\n          .substr(11, 8);\r\n        dayData.totalGrossHours = gross.hms;\r\n        dayData.routeUrl = `https://www.google.com/maps/dir/${routePoints.join(\r\n          '/'\r\n        )}`;\r\n\r\n        // \uD83D\uDD04 Ahora transformamos cada marcaci\u00F3n para solo dejar las columnas \u00FAtiles para el reporte\r\n        dayData.intervals = dayData.intervals.map((marcacion, idx) => ({\r\n          number: idx + 1,\r\n          transferTimeBetween: marcacion.transferTimeHMS,\r\n          branchName: marcacion.location,\r\n          timeIn: marcacion.datetime_in || 'Sin Entrada Registrada',\r\n          mapIn: marcacion.mapIn,\r\n          timeOut: marcacion.datetime_out || 'Sin Salida Registrada',\r\n          mapOut: marcacion.mapOut,\r\n          transferLabel: marcacion.transferLabel,\r\n          from: marcacion.from,\r\n          transportType: user.primaryTransport || 'N/A',\r\n        }));\r\n      }\r\n\r\n      // Guardamos todo agrupado por usuario\r\n      result[user.fullName] = groupedByDate;\r\n    }\r\n\r\n    return jsonResponse({ status: 'OK', data: result });\r\n  } catch (error) {\r\n    console.error('Error in handleMarcaciones:', error);\r\n    return jsonResponse({ error: 'Unexpected error occurred' }, 500);\r\n  }\r\n}\r\n", "import { handleUser } from './handlers/userHandler.js';\r\nimport { handleMarcaciones } from './handlers/marcacionesHandler.js';\r\n\r\nexport default {\r\n  async fetch(request, env, ctx) {\r\n    const url = new URL(request.url);\r\n    const path = url.pathname;\r\n\r\n    if (path === '/user') return await handleUser(url);\r\n    if (path === '/marcaciones') return await handleMarcaciones(url);\r\n\r\n    return new Response(JSON.stringify({ error: 'Endpoint no encontrado' }), {\r\n      status: 404,\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n  },\r\n};\r\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"D:\\\\Proyectos\\\\ServiRepoApp\\\\API\\\\ServiRepoAPI\\\\worker.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"D:\\\\Proyectos\\\\ServiRepoApp\\\\API\\\\ServiRepoAPI\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"D:\\\\Proyectos\\\\ServiRepoApp\\\\API\\\\ServiRepoAPI\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"D:\\\\Proyectos\\\\ServiRepoApp\\\\API\\\\ServiRepoAPI\\\\worker.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"D:\\\\Proyectos\\\\ServiRepoApp\\\\API\\\\ServiRepoAPI\\\\.wrangler\\\\tmp\\\\bundle-SvMOMZ\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"D:\\\\Proyectos\\\\ServiRepoApp\\\\API\\\\ServiRepoAPI\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"D:\\\\Proyectos\\\\ServiRepoApp\\\\API\\\\ServiRepoAPI\\\\.wrangler\\\\tmp\\\\bundle-SvMOMZ\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"D:\\\\Proyectos\\\\ServiRepoApp\\\\API\\\\ServiRepoAPI\\\\.wrangler\\\\tmp\\\\bundle-SvMOMZ\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": []
}
